#!/usr/bin/env perl

use strict; use warnings; use warnings FATAL => 'uninitialized';
use Function::Parameters qw(:strict);
use Sub::Call::Tail;

# find modules from functional-perl working directory (not installed)
use Cwd 'abs_path';
our ($mydir, $myname); BEGIN {
    my $location= (-l $0) ? abs_path ($0) : $0;
    $location=~ /(.*?)([^\/]+?)_?\z/s or die "?";
    ($mydir, $myname)=($1,$2);
}
use lib "$mydir/../lib";

use FP::List ":all";
use FP::Array ":all";
use FP::Array_sort ":all";
use Chj::TEST;
use Chj::ruse;
use Chj::Trapl; # or Chj::Backtrace
use Chj::repl;

{
    package FooBase;
    sub new {
	my $class=shift;
	my ($val)=@_;
	bless {val=> $val}, $class
    }
    sub val {
	my ($self,$x)=@_;
	$$self{val}
    }
}

{
    package Foo;
    use base 'FooBase';
    sub add {
	my ($self,$x)=@_;
	$$self{val}+= $x;
	$self
    }
}

{
    package Foo2;
    use base 'FooBase';
    sub add {
	my ($self,$x)=@_;
	ref($self)->new($self->val + $x)
    }
}



repl;

