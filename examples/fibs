#!/usr/bin/perl -w

use strict; use warnings FATAL => 'uninitialized';

# find modules from functional-perl working directory (not installed)
use Cwd 'abs_path';
our ($mydir, $myname); BEGIN {
    my $location= (-l $0) ? abs_path ($0) : $0;
    $location=~ /(.*?)([^\/]+?)_?\z/s or die "?";
    ($mydir, $myname)=($1,$2);
}
use lib "$mydir/../lib";


use Chj::Backtrace;
use Chj::repl;

use Chj::TEST;
use Chj::FP::List ":all";
use Chj::FP::Ops ":all";
use Chj::FP::Lazy ":all";
use Chj::FP::Stream ":all";


# fibs :: [Integer]
# fibs = 1:1:zipWith (+) fibs (tail fibs)
# fib n = fibs!!n

our $fibs; $fibs=
  cons 1, cons 1, Delay { stream_zip_with \&add, Keep($fibs), rest $fibs };

sub fib {
    my ($n)=@_;
    stream_ref Keep($fibs), $n
}

TEST { stream2array stream_take Keep($fibs), 10 }
        [
          1,
          1,
          2,
          3,
          5,
          8,
          13,
          21,
          34,
          55
        ];

TEST { fib 30 }
  1346269;

repl;
