#!/usr/bin/env perl

# Copyright (c) 2015 Christian Jaeger, copying@christianjaeger.ch
# This is free software. See the file COPYING.md that came bundled
# with this file.

use strict; use warnings; use warnings FATAL => 'uninitialized';

# find modules from functional-perl working directory (not installed)
use Cwd 'abs_path';
our ($mydir, $myname); BEGIN {
    my $location= (-l $0) ? abs_path ($0) : $0;
    $location=~ /(.*?)([^\/]+?)_?\z/s or die "?";
    ($mydir, $myname)=($1,$2);
}
use lib "$mydir/../lib";

sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [vX.Y]

  Make a new functional-perl release, or, without release number,
  simply regenerate the website.

";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
GetOptions("verbose"=> \$verbose,
           "help"=> sub{usage},
           #"dry-run"=> \$opt_dry,
           ) or exit 1;
usage unless @ARGV<=1;

use Chj::xopen qw(xopen_read);
use Chj::xtmpfile;
use Chj::xperlfunc;

if (@ARGV) {
    my ($tag)=@ARGV;

    my ($version)= $tag=~ m/^v(\d.*)\z/s
      or die "tag must start with 'v' and a digit";

    my $path= "lib/FP.pm";

    my $cnt= xopen_read ($path)->xcontent;
    $cnt=~ s|(\$VERSION\s*=\s*)"[^"]+"|$1"$version"|s
      or die "could not replace \$VERSION in $path";

    my $f= xtmpfile $path;
    $f->xprint($cnt);
    $f->xclose;
    $f->xputback;

    xxsystem "git", "commit", "-a", "-m", "release $tag";
    xxsystem "git", "tag", "-a", "-m", "release $tag", $tag, "HEAD";
}

xxsystem "website/gen", "--trap";

print "OK, now push to github and sync website\n";

