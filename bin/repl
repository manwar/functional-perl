#!/usr/bin/perl -w

#
# Copyright 2002,2014 by Christian Jaeger, ch at christianjaeger . ch
# Published under the same terms as perl itself
#

use strict; use warnings FATAL => 'uninitialized';

use Cwd 'abs_path';
our ($mydir, $myname); BEGIN {
    my $location= (-l $0) ? abs_path ($0) : $0;
    $location=~ /(.*?)([^\/]+?)_?\z/s or die "?";
    ($mydir, $myname)=($1,$2);
}
use lib "$mydir/../lib";


sub usage {
    print "$myname [ calculation(s) ]
  Evaluates the given string(s), or goes into interactive mode if
  none given.

  Interactive mode tricks:
  - enter alone re-evaluates last entry. No need to push cursor up for that:)
  - you can use \$variables (there's no strict vars in scope), or define
    subroutines, whatever...:)
  - the last result is stored in \$res; so you can enter '\$res+1' for example
  - if you enter the pipe symbol | as the first char, text is read until
    eof (ctl-d) is reached, thus multi-line entries are possible.

  Options:
  -H|--no-history  Do not save history to file.
                   (It is still being read in on startup.)
";
exit @_;
}

my $HISTFILE= "$ENV{HOME}/.${myname}_history";
my $MAXHISTLEN= 100;

my @files;
my $opt_H;
my @opt_M;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
	usage
    } elsif ($_ eq '--') {
	push @files, @ARGV[$i+1..$#ARGV];
	last;
    } elsif ($_ eq '-H' or $_ eq '--no-history') {
	$opt_H=1;
    } elsif (/^-M(.*)/) {
	if ($1) {
	    push @opt_M,$1;
	} else {
	    my $arg= $ARGV[++$i];
	    defined $arg or usage "missing argument to -M";
	    push @opt_M,$arg;
	}
    } elsif (/^-/) {
	warn "Unknown option '$_'\n";
	usage(1)
    } else {
	push @files, $_
    }
}


eval {
    require Chj::BinHexOctDec;
};
warn $@ if $@;

if (@opt_M) {
    require 'Chj/Package/OfPath.pm';
    Chj::Package::OfPath->import('package_of_path_or_package');
    eval "package $myname; "
      .join(";",
	    map { "use $_" }
	    map {
		my $a=$_;
		$a=~ s/([^=]+)//s
		  or die "invalid -M option '$_'";
		my $path_or_package= $1;
		my $p= package_of_path_or_package($path_or_package);
		if ($a=~ s/^=//s) {
		    $p." ".join(", ",map{"'$_'"} split /,/,$a)
		} else {
		    $p
		}
	    }
	    @opt_M);
    die $@ if $@;
}


if (@files) {
    for (@files) {
	my $res= eval $_; die $@ if $@;
	print "$res\n";
    }
}

else {
    require Chj::Util::Repl;
    my $repl= new Chj::Util::Repl;
    $repl->set_historypath($opt_H ? undef : $HISTFILE);
    $repl->set_maxhistlen($MAXHISTLEN);
    $repl->set_package($myname);
    eval "package $myname; use Data::Dumper;";
    $repl->run;
}

